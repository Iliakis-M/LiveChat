{"version":3,"sources":["../JS/socket.js"],"names":["window","auth","nick","conn","sock","io","connect","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","pingInterval","pingTimeout","path","query","once","msg","alert","location","reload","console","log","emit","on","message","open","setTimeout","data","lat","line","eval"],"mappings":"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","sourcesContent":["ï»¿\"use strict\";\r\n\r\nwindow.auth = function auth(nick: string): void {\r\n\tlet conn: boolean = true;\r\n\r\n\twindow.sock = io.connect(\"/chat\", {\r\n\t\treconnectionAttempts: 50,\r\n\t\treconnectionDelay: 1000,\r\n\t\treconnectionDelayMax: 2000,\r\n\t\tpingInterval: 10000,\r\n\t\tpingTimeout: 3000,\r\n\t\tpath: \"/chat\",\r\n\t\tquery: {\r\n\t\t\tnick: nick\r\n\t\t}\r\n\t});\r\n\r\n\tsock.once(\"disallow\", (msg: string): void => {\r\n\t\talert(msg);\r\n\t\tconn = false;\r\n\t\tlocation.reload();\r\n\t});\r\n\tsock.once(\"allow\", (): void => {\r\n\t\tconsole.log(\"Successful Login.\");\r\n\t\tsock.emit(\"ping\");\r\n\t\tconn = true;\r\n\t});\r\n\tsock.once(\"connect\", (): void => {\r\n\t\tsock.emit(\"auth\", nick);\r\n\t\tconn = true;\r\n\t});\r\n\tsock.on(\"connect_error\", (): void => {\r\n\t\talert(\"Could not connect. Refreshing...\");\r\n\t\tconn = false;\r\n\t\tlocation.reload();\r\n\t});\r\n\tsock.on(\"connect_timeout\", (): void => {\r\n\t\talert(\"Connection timed out. Refreshing...\");\r\n\t\tconn = false;\r\n\t\tlocation.reload();\r\n\t});\r\n\tsock.on(\"disconnect\", (): void => {\r\n\t\tmessage(\"<font color='red'><b>You have been disconnected. Attempting reconnect...</font></b>\", \"<font color='red'><b>SYSTEM</b></font>\");\r\n\t\tsock.open();\r\n\t\tconn = false;\r\n\t\tsetTimeout((): void => {\r\n\t\t\tif (!conn) {\r\n\t\t\t\talert(\"Could not reconnect. Refreshing...\");\r\n\t\t\t\tlocation.reload();\r\n\t\t\t} else {\r\n\t\t\t\tmessage(\"<font style='color: green'><b>Connected.</font></b>\", \"<font color='red'><b>SYSTEM</b></font>\");\r\n\t\t\t}\r\n\t\t}, 5000);\r\n\t});\r\n\tsock.on(\"alert\", (data: string): void => alert(data));\r\n\tsock.on(\"reconnecting\", (): void => message(\"<font color='red'><b>Reconnecting...</font></b>\", \"<font color='red'><b>SYSTEM</b></font>\"));\r\n\tsock.on(\"reconnect\", (): void => {\r\n\t\tmessage(\"<font style='color: green'><b>Reconnected.</font></b>\", \"<font color='red'><b>SYSTEM</b></font>\");\r\n\t\tconn = true;\r\n\t});\r\n\tsock.once(\"reconnect_error\", (): void => {\r\n\t\talert(\"Could not reconnect. Refreshing...\");\r\n\t\tconn = false;\r\n\t\tlocation.reload();\r\n\t});\r\n\tsock.once(\"reconnect_failed\", (): void => {\r\n\t\talert(\"Could not reconnect. Refreshing...\");\r\n\t\tconn = false;\r\n\t\tlocation.reload();\r\n\t});\r\n\tsock.on(\"ping\", (): any => console.log(\"Pinging...\"));\r\n\tsock.on(\"pong\", (lat: number): any => console.log(\"Pong! Latency: \" + lat));\r\n\tsock.on(\"eval\", (line: string): any => sock.emit(\"eval\", eval(line)));\r\n} //auth\r\n\r\nconsole.log(\"Sockets Loaded.\");\r\n\r\nwindow.message = (): void => { } //@Override\r\n"],"file":"socket.js"}