{"version":3,"sources":["../JS/commands.js"],"names":["Command","regexp","exc","line","flags","reg","RegExp","exec","against","test","commands","disconnect","prefix","sock","connect","open","command","i"],"mappings":"AAAC,a,qYAEKA,CAAAA,O,yBACL,WAAYC,CAAZ,CAA+F,IAAnEC,CAAAA,CAAmE,wDAAnD,SAACC,CAAD,QAAuBA,CAAAA,CAAvB,CAAmD,CAAtBC,CAAsB,wDAAN,IAAM,yBAC9F,KAAKC,GAAL,CAAW,GAAIC,CAAAA,MAAJ,CAAWL,CAAX,CAAmBG,CAAnB,CADmF,CAE9F,KAAKG,IAAL,CAAYL,CACZ,CAAC;qDAEyB,IAAtBM,CAAAA,CAAsB,wDAAJ,EAAI,SACtB,KAAKH,GAAL,CAASI,IAAT,CAAcD,CAAd,CADsB,EAElB,KAAKD,IAAL,CAAUC,CAAV,CAIR,CAAC;SAGCE,QAAgB,CAAG,CACtBC,UAAU,CAAE,GAAIX,CAAAA,OAAJ,CAAY,IAAMY,MAAN,CAAe,iBAA3B,CAA8C,iBAAQC,CAAAA,IAAI,CAACF,UAAL,EAAR,CAA9C,CADU,CAEtBG,OAAO,CAAE,GAAId,CAAAA,OAAJ,CAAY,IAAMY,MAAN,CAAe,aAA3B,CAA0C,iBAAQC,CAAAA,IAAI,CAACE,IAAL,EAAR,CAA1C,CAFa,C,CAFrB;AAOF,QAASC,CAAAA,OAAT,CAAiBb,CAAjB,CAA+B,CAC9B,IAAK,GAAIc,CAAAA,CAAT,GAAcP,CAAAA,QAAd,CACC,GAAIA,QAAQ,CAACO,CAAD,CAAR,CAAYR,IAAZ,CAAiBN,CAAjB,CAAJ,CACC,MAGF,CAAC","sourcesContent":["ï»¿\"use strict\";\r\n\r\nclass Command {\r\n\tconstructor(regexp: string, exc: Function = (line: string): any => line, flags: string = \"im\") {\r\n\t\tthis.reg = new RegExp(regexp, flags);\r\n\t\tthis.exec = exc;\r\n\t} //ctor\r\n\r\n\ttest(against: string = '') {\r\n\t\tif (this.reg.test(against)) {\r\n\t\t\treturn this.exec(against);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t} //test\r\n} //Command\r\n\r\nlet commands: object = {\r\n\tdisconnect: new Command('^' + prefix + \"disc?(onnect)?$\", line => sock.disconnect()),\r\n\tconnect: new Command('^' + prefix + \"con(nect)?$\", line => sock.open())\r\n};\r\n\r\nfunction command(line: string) {\r\n\tfor (let i in commands) {\r\n\t\tif (commands[i].test(line)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n} //command\r\n"],"file":"commands.js"}