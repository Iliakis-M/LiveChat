"use strict";function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}var text={shift:!1,area:null,send:null,room:null},scroll=100,historyIdx=0,hist=[""],maxHistory=50,rooms={},room="LOBBY",last=0,prefix="!!",threshold=800;for(window.nick=getCookie("user")||"guest_"+Math.round(1e5*Math.random());!(nick=prompt("Insert a Nickname:",nick||getCookie("user")))||!/^[a-zA-Z0-9_\-();' ]+$/i.test(nick););function drop(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:1;for(a=a.split(" ");b--;)a.shift();return a.join(" ")}//drop
function dropGet(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:0;for(a=a.split(" ");b--;)a.shift();return a.shift()}//dropGet
function load(){return _load.apply(this,arguments)}//load
function _load(){return _load=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:console.log("Index loaded"),text.area=document.getElementById("msgarea"),text.send=document.getElementById("txtarea"),text.room=document.getElementById("rooms"),500>=window.innerWidth&&text.room.classList.add("shrink"),auth(nick),setCookie("user",nick),parseQueries(),sock.on("message",/*#__PURE__*/function(){var a=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(b,c,d){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:d==room&&message(b,c);case 1:case"end":return a.stop();}},a,this)}));return function(){return a.apply(this,arguments)}}()),sock.on("joinable",function(a,b){var c=a;if(a in rooms){var e=rooms[a];return void(e.onclick=function(){switchCur(a,b?void 0:"")})}a.startsWith("USR")&&(c="Private Channel\n (".concat(a,")"));var d=document.createElement("p");d.classList.add("channel"),d.innerHTML=c,d.onclick=function(){switchCur(a,b?void 0:"")},rooms[a]=d,text.room.appendChild(d)}),sock.on("left",function(){}),sock.on("main",function(a){rooms[room].classList.remove("selected-chan"),rooms[a].classList.add("selected-chan"),room=a}),sock.on("history",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){var b,c,d,e,f,g=arguments;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:for(b=g.length,c=Array(b),d=0;d<b;d++)c[d]=g[d];for(e=0;e<c.length;e++)f=c[e],f.room==room&&message(f.content,f.user,new Date(f.timestamp).toDateString());case 2:case"end":return a.stop();}},a,this)}))),sock.once("connect",function(){text.area.innerHTML="",message("This is a Beta version of a chatting service, upcoming features are: profile picture support, multiple chatrooms and more security!","<font color='red'><b>SYSTEM</b></font>"),message("<b>THIS SERVER DOES NOT FOLLOW PRIVACY RULES!! USE AT YOUR OWN AGREEMENT (GDPR)</b>","<font color='red'><b>SYSTEM</b></font>"),message("<u>Please be kind and don't spam, we have means of banning aggitators.</u>","<font color='red'><b>SYSTEM</b></font>"),console.info("The prefix is !!, type !!help in chat for commands.")});case 14:case"end":return a.stop();}},a,this)})),_load.apply(this,arguments)}function switchCur(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"LOBBY",b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:prompt("Password (Leave empty for public rooms or already authorized rooms)",""),c=!(2<arguments.length&&arguments[2]!==void 0)||arguments[2];sock.emit("switch",a,b,c),text.area.innerHTML=""}//switchCur
function send(){var msg=0<arguments.length&&void 0!==arguments[0]?arguments[0]:text.send.value;return text.send.value="",msg.startsWith(prefix)?command(msg):void(msg=msg.replace(/\${((.|\n)+?)}/gm,function(match,p){return eval(p)}),msg=msg.trim(),sendMessage(msg))}//send
function sendMessage(a){a?Date.now()-last<=threshold?message("<font color='red'><b>Please wait ".concat(threshold/1e3,"s before sending another message!</b></font>"),"<font color='red'><b>SYSTEM</b></font>"):conn?(sock.send(a),last=Date.now()):message("<font color='red'><b>You cannot send messages while disconnected!</b></font>","<font color='red'><b>SYSTEM</b></font>"):message("<font color='red'><b>You cannot send an empty message!</b></font>","<font color='red'><b>SYSTEM</b></font>")}//sendMessage
function message(a,b){var c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:new Date().toDateString(),d=document.createElement("p");d.innerHTML="<font color='gray'><small>".concat(c,"</small></font>&emsp;<b>").concat(b,":</b> ").concat(a,"<hr />"),text.area.appendChild(d),text.area.scrollBy?text.area.scrollBy(0,scroll):text.area.scrollTop+=scroll}//message
function shiftcheck(a){var b=!(1<arguments.length&&arguments[1]!==void 0)||arguments[1];if("Shift"==a.key)text.shift=b;else{if("ArrowUp"==a.key&&b)return++historyIdx,historyIdx%=hist.length,void(text.send.value=hist[historyIdx]);if("ArrowUp"==a.key)return;if("ArrowDown"==a.key&&b)return historyIdx=1>historyIdx?hist.length-1:historyIdx-1,void(text.send.value=hist[historyIdx]);if("ArrowDown"==a.key)return;if("Enter"==a.key&&!text.shift&&!b)for(send(),hist.unshift("");hist.length>=maxHistory;)hist.pop()}hist[0]=text.send.value}//shiftcheck
function submit(){text.shift=!1,shiftcheck({key:"Enter"},!1)}//submit
function sanitize(a){return a=a.replace(/&/gmi,"&amp;").replace(/</gmi,"&lt;").replace(/>/gmi,"&gt;").replace(/"/gmi,"&quot;").replace(/'/gmi,"&#039;"),a}//sanitize
function parseCookies(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:document.cookie;return new Map(a.split(";").map(function(a){return a.split("=")}))}//parseCookies
function storeCookies(a){return document.cookie=Array.from(a).map(function(b){return b.join("=")}).join(";")}//storeCookies
function setCookie(a,b){var c=parseCookies();return c.set(a,b),storeCookies(c)}//setCookie
function getCookie(a){var b=parseCookies();return b.get(a)}//getCookie
function parseQueries(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:location.href,b=a.split("?").pop().replace(/#.*?$/,"").split("&").map(function(a){return a.split("=")}),c=!0,d=!1,e=void 0;try{for(var f,g,h=b[Symbol.iterator]();!(c=(f=h.next()).done);c=!0)g=f.value,window[g.shift()]=g.pop()}catch(a){d=!0,e=a}finally{try{c||null==h.return||h.return()}finally{if(d)throw e}}}//parseQueries
window.addEventListener("DOMContentLoaded",load);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0pTL2luZGV4LmpzIl0sIm5hbWVzIjpbInRleHQiLCJzaGlmdCIsImFyZWEiLCJzZW5kIiwicm9vbSIsInNjcm9sbCIsImhpc3RvcnlJZHgiLCJoaXN0IiwibWF4SGlzdG9yeSIsInJvb21zIiwibGFzdCIsInByZWZpeCIsInRocmVzaG9sZCIsIndpbmRvdyIsIm5pY2siLCJnZXRDb29raWUiLCJNYXRoIiwicm91bmQiLCJyYW5kb20iLCJwcm9tcHQiLCJ0ZXN0IiwiZHJvcCIsImxpbmUiLCJ0Iiwic3BsaXQiLCJqb2luIiwiZHJvcEdldCIsImxvYWQiLCJjb25zb2xlIiwibG9nIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVyV2lkdGgiLCJjbGFzc0xpc3QiLCJhZGQiLCJhdXRoIiwic2V0Q29va2llIiwicGFyc2VRdWVyaWVzIiwic29jayIsIm9uIiwibXNnIiwicm0iLCJtZXNzYWdlIiwiY2hhbiIsInBhc3MiLCJjaGFubiIsInAiLCJvbmNsaWNrIiwic3dpdGNoQ3VyIiwic3RhcnRzV2l0aCIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJhcHBlbmRDaGlsZCIsIm5hbWUiLCJyZW1vdmUiLCJkYXRhIiwiaSIsImNvbnRlbnQiLCJ1c2VyIiwiRGF0ZSIsInRpbWVzdGFtcCIsInRvRGF0ZVN0cmluZyIsIm9uY2UiLCJpbmZvIiwidmlzaWJsZSIsImVtaXQiLCJ2YWx1ZSIsImNvbW1hbmQiLCJyZXBsYWNlIiwibWF0Y2giLCJldmFsIiwidHJpbSIsInNlbmRNZXNzYWdlIiwibm93IiwiY29ubiIsImRhdGUiLCJzY3JvbGxCeSIsInNjcm9sbFRvcCIsInNoaWZ0Y2hlY2siLCJldmVudCIsImRvd24iLCJrZXkiLCJsZW5ndGgiLCJ1bnNoaWZ0IiwicG9wIiwic3VibWl0Iiwic2FuaXRpemUiLCJwYXJzZUNvb2tpZXMiLCJjb29raWVzIiwiY29va2llIiwiTWFwIiwibWFwIiwiYyIsInN0b3JlQ29va2llcyIsIkFycmF5IiwiZnJvbSIsImEiLCJ0bXAiLCJzZXQiLCJnZXQiLCJsb2MiLCJsb2NhdGlvbiIsImhyZWYiLCJvdXQiLCJxIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6IkFBQUMsYSxnWUFFR0EsQ0FBQUEsSUFBWSxDQUFHLENBQ2xCQyxLQUFLLEdBRGEsQ0FFbEJDLElBQUksQ0FBRSxJQUZZLENBR2xCQyxJQUFJLENBQUUsSUFIWSxDQUlsQkMsSUFBSSxDQUFFLElBSlksQyxDQU1sQkMsTUFBYyxDQUFHLEcsQ0FDakJDLFVBQWtCLENBQUcsQyxDQUNyQkMsSUFBVyxDQUFHLENBQUMsRUFBRCxDLENBQ2RDLFVBQWtCLENBQUcsRSxDQUNyQkMsS0FBYSxDQUFHLEUsQ0FDaEJMLElBQVksQ0FBRyxPLENBQ2ZNLElBQUksQ0FBRyxDLENBRUZDLE1BQWMsQ0FBRyxJLENBQ3RCQyxTQUFTLENBQUcsRyxLQUViQyxNQUFNLENBQUNDLElBQVAsQ0FBY0MsU0FBUyxDQUFDLE1BQUQsQ0FBVCxFQUFxQixTQUFXQyxJQUFJLENBQUNDLEtBQUwsQ0FBMkIsR0FBaEIsQ0FBQUQsSUFBSSxDQUFDRSxNQUFMLEVBQVgsQyxDQUV2QyxFQUFFSixJQUFJLENBQUdLLE1BQU0sQ0FBQyxvQkFBRCxDQUF1QkwsSUFBSSxFQUFJQyxTQUFTLENBQUMsTUFBRCxDQUF4QyxDQUFmLEdBQXFFLENBQUMsMEJBQTBCSyxJQUExQixDQUErQk4sSUFBL0IsQyxHQUU3RSxRQUFTTyxDQUFBQSxJQUFULENBQWNDLENBQWQsQ0FBbUQsSUFBdkJDLENBQUFBLENBQXVCLHdEQUFYLENBQVcsS0FDbERELENBQUksQ0FBR0EsQ0FBSSxDQUFDRSxLQUFMLENBQVcsR0FBWCxDQUQyQyxDQUUzQ0QsQ0FBQyxFQUYwQyxFQUdqREQsQ0FBSSxDQUFDckIsS0FBTCxHQUVELE1BQU9xQixDQUFBQSxDQUFJLENBQUNHLElBQUwsQ0FBVSxHQUFWLENBQ1AsQ0FBQztBQUVGLFFBQVNDLENBQUFBLE9BQVQsQ0FBaUJKLENBQWpCLENBQXNELElBQXZCQyxDQUFBQSxDQUF1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QzRGLGdCQUFQLENBQXdCLGtCQUF4QixDQUE0QzlFLElBQTVDLEMiLCJzb3VyY2VzQ29udGVudCI6WyLvu79cInVzZSBzdHJpY3RcIjtcclxuXHJcbmxldCB0ZXh0OiBvYmplY3QgPSB7XHJcblx0c2hpZnQ6IGZhbHNlLFxyXG5cdGFyZWE6IG51bGwsXHJcblx0c2VuZDogbnVsbCxcclxuXHRyb29tOiBudWxsXHJcbn0sXHJcblx0c2Nyb2xsOiBudW1iZXIgPSAxMDAsXHJcblx0aGlzdG9yeUlkeDogbnVtYmVyID0gMCxcclxuXHRoaXN0OiBBcnJheSA9IFsnJ10sXHJcblx0bWF4SGlzdG9yeTogbnVtYmVyID0gNTAsXHJcblx0cm9vbXM6IG9iamVjdCA9IHsgfSxcclxuXHRyb29tOiBzdHJpbmcgPSBcIkxPQkJZXCIsXHJcblx0bGFzdCA9IDA7XHJcblxyXG5jb25zdCBwcmVmaXg6IHN0cmluZyA9IFwiISFcIixcclxuXHR0aHJlc2hvbGQgPSA4MDA7XHJcblxyXG53aW5kb3cubmljayA9IGdldENvb2tpZShcInVzZXJcIikgfHwgXCJndWVzdF9cIiArIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDFlNSk7XHJcblxyXG53aGlsZSAoIShuaWNrID0gcHJvbXB0KFwiSW5zZXJ0IGEgTmlja25hbWU6XCIsIG5pY2sgfHwgZ2V0Q29va2llKFwidXNlclwiKSkpIHx8ICEvXlthLXpBLVowLTlfXFwtKCk7JyBdKyQvaS50ZXN0KG5pY2spKSB7IH1cclxuXHJcbmZ1bmN0aW9uIGRyb3AobGluZTogbnVtYmVyLCB0OiBudW1iZXIgPSAxKTogc3RyaW5nIHtcclxuXHRsaW5lID0gbGluZS5zcGxpdCgnICcpO1xyXG5cdHdoaWxlICh0LS0pIHtcclxuXHRcdGxpbmUuc2hpZnQoKTtcclxuXHR9XHJcblx0cmV0dXJuIGxpbmUuam9pbignICcpO1xyXG59IC8vZHJvcFxyXG5cclxuZnVuY3Rpb24gZHJvcEdldChsaW5lOiBudW1iZXIsIHQ6IG51bWJlciA9IDApOiBzdHJpbmcge1xyXG5cdGxpbmUgPSBsaW5lLnNwbGl0KCcgJyk7XHJcblx0d2hpbGUgKHQtLSkge1xyXG5cdFx0bGluZS5zaGlmdCgpO1xyXG5cdH1cclxuXHRyZXR1cm4gbGluZS5zaGlmdCgpO1xyXG59IC8vZHJvcEdldFxyXG5cclxuYXN5bmMgZnVuY3Rpb24gbG9hZChlPzogb2JqZWN0KTogdm9pZCB7XHJcblx0Y29uc29sZS5sb2coXCJJbmRleCBsb2FkZWRcIik7XHJcblxyXG5cdHRleHQuYXJlYSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXNnYXJlYVwiKTtcclxuXHR0ZXh0LnNlbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR4dGFyZWFcIik7XHJcblx0dGV4dC5yb29tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb29tc1wiKTtcclxuXHJcblx0aWYgKHdpbmRvdy5pbm5lcldpZHRoIDw9IDUwMCkge1xyXG5cdFx0dGV4dC5yb29tLmNsYXNzTGlzdC5hZGQoXCJzaHJpbmtcIik7XHJcblx0fVxyXG5cclxuXHRhdXRoKG5pY2spO1xyXG5cdHNldENvb2tpZShcInVzZXJcIiwgbmljayk7XHJcblx0cGFyc2VRdWVyaWVzKCk7XHJcblx0XHJcblx0c29jay5vbihcIm1lc3NhZ2VcIiwgYXN5bmMgKG1zZzogc3RyaW5nLCBuaWNrOiBzdHJpbmcsIHJtOiBzdHJpbmcpOiB2b2lkID0+IHtcclxuXHRcdGlmIChybSA9PSByb29tKSBtZXNzYWdlKG1zZywgbmljayk7XHJcblx0fSk7XHJcblx0c29jay5vbihcImpvaW5hYmxlXCIsIChjaGFuLCBwYXNzKSA9PiB7XHJcblx0XHRsZXQgY2hhbm4gPSBjaGFuO1xyXG5cdFx0aWYgKGNoYW4gaW4gcm9vbXMpIHtcclxuXHRcdFx0bGV0IHAgPSByb29tc1tjaGFuXTtcclxuXHRcdFx0cC5vbmNsaWNrID0gZnVuY3Rpb24gY2xpY2soZT86IG9iamVjdCkge1xyXG5cdFx0XHRcdHN3aXRjaEN1cihjaGFuLCBwYXNzID8gdW5kZWZpbmVkIDogJycpO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblx0XHRpZiAoY2hhbi5zdGFydHNXaXRoKFwiVVNSXCIpKSB7XHJcblx0XHRcdGNoYW5uID0gYFByaXZhdGUgQ2hhbm5lbFxcbiAoJHtjaGFufSlgO1xyXG5cdFx0fVxyXG5cdFx0bGV0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuXHRcdHAuY2xhc3NMaXN0LmFkZChcImNoYW5uZWxcIik7XHJcblx0XHRwLmlubmVySFRNTCA9IGNoYW5uO1xyXG5cdFx0cC5vbmNsaWNrID0gZnVuY3Rpb24gY2xpY2soZT86IG9iamVjdCkge1xyXG5cdFx0XHRzd2l0Y2hDdXIoY2hhbiwgcGFzcyA/IHVuZGVmaW5lZCA6ICcnKTtcclxuXHRcdH07XHJcblx0XHRyb29tc1tjaGFuXSA9IHA7XHJcblx0XHR0ZXh0LnJvb20uYXBwZW5kQ2hpbGQocCk7XHJcblx0fSk7XHJcblx0c29jay5vbihcImxlZnRcIiwgKCkgPT4geyB9KTsgIC8vSU1QTFxyXG5cdHNvY2sub24oXCJtYWluXCIsIG5hbWUgPT4ge1xyXG5cdFx0cm9vbXNbcm9vbV0uY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkLWNoYW5cIik7XHJcblx0XHRyb29tc1tuYW1lXS5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWQtY2hhblwiKTtcclxuXHRcdHJvb20gPSBuYW1lO1xyXG5cdH0pO1xyXG5cdHNvY2sub24oXCJoaXN0b3J5XCIsIGFzeW5jICguLi5kYXRhOiBzdHJpbmdbXSk6IHZvaWQgPT4ge1xyXG5cdFx0Zm9yIChsZXQgaSBvZiBkYXRhKSB7XHJcblx0XHRcdGlmIChpLnJvb20gPT0gcm9vbSkgbWVzc2FnZShpLmNvbnRlbnQsIGkudXNlciwgKG5ldyBEYXRlKGkudGltZXN0YW1wKSkudG9EYXRlU3RyaW5nKCkpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdHNvY2sub25jZShcImNvbm5lY3RcIiwgKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGV4dC5hcmVhLmlubmVySFRNTCA9ICcnO1xyXG5cdFx0bWVzc2FnZShcIlRoaXMgaXMgYSBCZXRhIHZlcnNpb24gb2YgYSBjaGF0dGluZyBzZXJ2aWNlLCB1cGNvbWluZyBmZWF0dXJlcyBhcmU6IHByb2ZpbGUgcGljdHVyZSBzdXBwb3J0LCBtdWx0aXBsZSBjaGF0cm9vbXMgYW5kIG1vcmUgc2VjdXJpdHkhXCIsIFwiPGZvbnQgY29sb3I9J3JlZCc+PGI+U1lTVEVNPC9iPjwvZm9udD5cIik7XHJcblx0XHRtZXNzYWdlKFwiPGI+VEhJUyBTRVJWRVIgRE9FUyBOT1QgRk9MTE9XIFBSSVZBQ1kgUlVMRVMhISBVU0UgQVQgWU9VUiBPV04gQUdSRUVNRU5UIChHRFBSKTwvYj5cIiwgXCI8Zm9udCBjb2xvcj0ncmVkJz48Yj5TWVNURU08L2I+PC9mb250PlwiKTtcclxuXHRcdG1lc3NhZ2UoXCI8dT5QbGVhc2UgYmUga2luZCBhbmQgZG9uJ3Qgc3BhbSwgd2UgaGF2ZSBtZWFucyBvZiBiYW5uaW5nIGFnZ2l0YXRvcnMuPC91PlwiLCBcIjxmb250IGNvbG9yPSdyZWQnPjxiPlNZU1RFTTwvYj48L2ZvbnQ+XCIpO1xyXG5cdFx0Y29uc29sZS5pbmZvKFwiVGhlIHByZWZpeCBpcyAhISwgdHlwZSAhIWhlbHAgaW4gY2hhdCBmb3IgY29tbWFuZHMuXCIpO1xyXG5cdH0pO1xyXG59IC8vbG9hZFxyXG5cclxuZnVuY3Rpb24gc3dpdGNoQ3VyKG5hbWU6IHN0cmluZyA9IFwiTE9CQllcIiwgcGFzczogc3RyaW5nID0gcHJvbXB0KFwiUGFzc3dvcmQgKExlYXZlIGVtcHR5IGZvciBwdWJsaWMgcm9vbXMgb3IgYWxyZWFkeSBhdXRob3JpemVkIHJvb21zKVwiLCAnJyksIHZpc2libGU6IGJvb2xlYW4gPSB0cnVlKSB7XHJcblx0c29jay5lbWl0KFwic3dpdGNoXCIsIG5hbWUsIHBhc3MsIHZpc2libGUpO1xyXG5cdHRleHQuYXJlYS5pbm5lckhUTUwgPSAnJztcclxufSAvL3N3aXRjaEN1clxyXG5cclxuZnVuY3Rpb24gc2VuZChtc2c6IHN0cmluZyA9IHRleHQuc2VuZC52YWx1ZSk6IHZvaWQge1xyXG5cdHRleHQuc2VuZC52YWx1ZSA9ICcnO1xyXG5cdGlmIChtc2cuc3RhcnRzV2l0aChwcmVmaXgpKSB7XHJcblx0XHRyZXR1cm4gY29tbWFuZChtc2cpO1xyXG5cdH1cclxuXHRtc2cgPSBtc2cucmVwbGFjZSgvXFwkeygoLnxcXG4pKz8pfS9nbSwgKG1hdGNoLCBwKSA9PiBldmFsKHApKTtcclxuXHRtc2cgPSBtc2cudHJpbSgpO1xyXG5cdHNlbmRNZXNzYWdlKG1zZyk7XHJcbn0gLy9zZW5kXHJcblxyXG5mdW5jdGlvbiBzZW5kTWVzc2FnZShtc2c6IHN0cmluZyk6IHZvaWQge1xyXG5cdGlmICghbXNnKSB7XHJcblx0XHRtZXNzYWdlKFwiPGZvbnQgY29sb3I9J3JlZCc+PGI+WW91IGNhbm5vdCBzZW5kIGFuIGVtcHR5IG1lc3NhZ2UhPC9iPjwvZm9udD5cIiwgXCI8Zm9udCBjb2xvcj0ncmVkJz48Yj5TWVNURU08L2I+PC9mb250PlwiKTtcclxuXHR9IGVsc2UgaWYgKERhdGUubm93KCkgLSBsYXN0IDw9IHRocmVzaG9sZCkge1xyXG5cdFx0bWVzc2FnZShgPGZvbnQgY29sb3I9J3JlZCc+PGI+UGxlYXNlIHdhaXQgJHt0aHJlc2hvbGQgLyAxMDAwfXMgYmVmb3JlIHNlbmRpbmcgYW5vdGhlciBtZXNzYWdlITwvYj48L2ZvbnQ+YCwgXCI8Zm9udCBjb2xvcj0ncmVkJz48Yj5TWVNURU08L2I+PC9mb250PlwiKTtcclxuXHR9IGVsc2UgaWYgKGNvbm4pIHtcclxuXHRcdHNvY2suc2VuZChtc2cpO1xyXG5cdFx0bGFzdCA9IERhdGUubm93KCk7XHJcblx0fSBlbHNlIHtcclxuXHRcdG1lc3NhZ2UoXCI8Zm9udCBjb2xvcj0ncmVkJz48Yj5Zb3UgY2Fubm90IHNlbmQgbWVzc2FnZXMgd2hpbGUgZGlzY29ubmVjdGVkITwvYj48L2ZvbnQ+XCIsIFwiPGZvbnQgY29sb3I9J3JlZCc+PGI+U1lTVEVNPC9iPjwvZm9udD5cIik7XHJcblx0fVxyXG59IC8vc2VuZE1lc3NhZ2VcclxuXHJcbmZ1bmN0aW9uIG1lc3NhZ2UobXNnOiBzdHJpbmcsIHVzZXI6IHN0cmluZywgZGF0ZTogc3RyaW5nID0gKG5ldyBEYXRlKCkpLnRvRGF0ZVN0cmluZygpKTogdm9pZCB7XHJcblx0bGV0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuXHRwLmlubmVySFRNTCA9IGA8Zm9udCBjb2xvcj0nZ3JheSc+PHNtYWxsPiR7ZGF0ZX08L3NtYWxsPjwvZm9udD4mZW1zcDs8Yj4ke3VzZXJ9OjwvYj4gJHttc2d9PGhyIC8+YDtcclxuXHRcclxuXHR0ZXh0LmFyZWEuYXBwZW5kQ2hpbGQocCk7XHJcblx0aWYgKHRleHQuYXJlYS5zY3JvbGxCeSkge1xyXG5cdFx0dGV4dC5hcmVhLnNjcm9sbEJ5KDAsIHNjcm9sbCk7XHJcblx0fSBlbHNlIHtcclxuXHRcdHRleHQuYXJlYS5zY3JvbGxUb3AgKz0gc2Nyb2xsO1xyXG5cdH1cclxufSAvL21lc3NhZ2VcclxuXHJcbmZ1bmN0aW9uIHNoaWZ0Y2hlY2soZXZlbnQ6IG9iamVjdCwgZG93bjogYm9vbGVhbiA9IHRydWUpOiB2b2lkIHtcclxuXHRpZiAoZXZlbnQua2V5ID09IFwiU2hpZnRcIikge1xyXG5cdFx0dGV4dC5zaGlmdCA9IGRvd247XHJcblx0fSBlbHNlIGlmIChldmVudC5rZXkgPT0gXCJBcnJvd1VwXCIgJiYgZG93bikge1xyXG5cdFx0KytoaXN0b3J5SWR4O1xyXG5cdFx0aGlzdG9yeUlkeCAlPSBoaXN0Lmxlbmd0aDtcclxuXHRcdHRleHQuc2VuZC52YWx1ZSA9IGhpc3RbaGlzdG9yeUlkeF07XHJcblx0XHRyZXR1cm47XHJcblx0fSBlbHNlIGlmIChldmVudC5rZXkgPT0gXCJBcnJvd1VwXCIpIHtcclxuXHRcdHJldHVybjtcclxuXHR9IGVsc2UgaWYgKGV2ZW50LmtleSA9PSBcIkFycm93RG93blwiICYmIGRvd24pIHtcclxuXHRcdGhpc3RvcnlJZHggPSAoaGlzdG9yeUlkeCA8IDEpID8gKGhpc3QubGVuZ3RoIC0gMSkgOiAoaGlzdG9yeUlkeCAtIDEpO1xyXG5cdFx0dGV4dC5zZW5kLnZhbHVlID0gaGlzdFtoaXN0b3J5SWR4XTtcclxuXHRcdHJldHVybjtcclxuXHR9IGVsc2UgaWYgKGV2ZW50LmtleSA9PSBcIkFycm93RG93blwiKSB7XHJcblx0XHRyZXR1cm47XHJcblx0fSBlbHNlIGlmIChldmVudC5rZXkgPT0gXCJFbnRlclwiICYmICF0ZXh0LnNoaWZ0ICYmICFkb3duKSB7XHJcblx0XHRzZW5kKCk7XHJcblx0XHRoaXN0LnVuc2hpZnQoJycpO1xyXG5cdFx0d2hpbGUgKGhpc3QubGVuZ3RoID49IG1heEhpc3RvcnkpIHtcclxuXHRcdFx0aGlzdC5wb3AoKTtcclxuXHRcdH1cclxuXHR9XHJcblx0aGlzdFswXSA9IHRleHQuc2VuZC52YWx1ZTtcclxufSAvL3NoaWZ0Y2hlY2tcclxuXHJcbmZ1bmN0aW9uIHN1Ym1pdChlPzogb2JqZWN0KTogdm9pZCB7XHJcblx0dGV4dC5zaGlmdCA9IGZhbHNlO1xyXG5cdHNoaWZ0Y2hlY2soe1xyXG5cdFx0a2V5OiBcIkVudGVyXCJcclxuXHR9LCBmYWxzZSk7XHJcbn0gLy9zdWJtaXRcclxuXHJcbmZ1bmN0aW9uIHNhbml0aXplKG1zZzogc3RyaW5nKTogc3RyaW5nIHtcclxuXHRtc2cgPSBtc2cucmVwbGFjZSgvJi9nbWksIFwiJmFtcDtcIilcclxuXHRcdC5yZXBsYWNlKC88L2dtaSwgXCImbHQ7XCIpXHJcblx0XHQucmVwbGFjZSgvPi9nbWksIFwiJmd0O1wiKVxyXG5cdFx0LnJlcGxhY2UoL1wiL2dtaSwgXCImcXVvdDtcIilcclxuXHRcdC5yZXBsYWNlKC8nL2dtaSwgXCImIzAzOTtcIik7XHJcblx0cmV0dXJuIG1zZztcclxufSAvL3Nhbml0aXplXHJcblxyXG5mdW5jdGlvbiBwYXJzZUNvb2tpZXMoY29va2llczogc3RyaW5nID0gZG9jdW1lbnQuY29va2llKTogTWFwIHtcclxuXHRyZXR1cm4gbmV3IE1hcChjb29raWVzLnNwbGl0KCc7JykubWFwKGMgPT4gYy5zcGxpdCgnPScpKSk7XHJcbn0gLy9wYXJzZUNvb2tpZXNcclxuXHJcbmZ1bmN0aW9uIHN0b3JlQ29va2llcyhtYXA6IE1hcCk6IHN0cmluZyB7XHJcblx0cmV0dXJuIGRvY3VtZW50LmNvb2tpZSA9IEFycmF5LmZyb20obWFwKS5tYXAoYSA9PiBhLmpvaW4oJz0nKSkuam9pbignOycpO1xyXG59IC8vc3RvcmVDb29raWVzXHJcblxyXG5mdW5jdGlvbiBzZXRDb29raWUoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG5cdGxldCB0bXAgPSBwYXJzZUNvb2tpZXMoKTtcclxuXHR0bXAuc2V0KGtleSwgdmFsdWUpO1xyXG5cdHJldHVybiBzdG9yZUNvb2tpZXModG1wKTtcclxufSAvL3NldENvb2tpZVxyXG5cclxuZnVuY3Rpb24gZ2V0Q29va2llKGtleTogc3RyaW5nKTogc3RyaW5nIHtcclxuXHRsZXQgdG1wOiBNYXAgPSBwYXJzZUNvb2tpZXMoKTtcclxuXHRyZXR1cm4gdG1wLmdldChrZXkpO1xyXG59IC8vZ2V0Q29va2llXHJcblxyXG5mdW5jdGlvbiBwYXJzZVF1ZXJpZXMobG9jOiBzdHJpbmcgPSBsb2NhdGlvbi5ocmVmKSB7XHJcblx0bGV0IG91dCA9IGxvYy5zcGxpdCgnPycpLnBvcCgpLnJlcGxhY2UoLyMuKj8kLywgJycpLnNwbGl0KCcmJykubWFwKHEgPT4gcS5zcGxpdCgnPScpKTtcclxuXHJcblx0Zm9yIChsZXQgaSBvZiBvdXQpIHtcclxuXHRcdHdpbmRvd1tpLnNoaWZ0KCldID0gaS5wb3AoKTtcclxuXHR9XHJcbn0gLy9wYXJzZVF1ZXJpZXNcclxuXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBsb2FkKTtcclxuIl19